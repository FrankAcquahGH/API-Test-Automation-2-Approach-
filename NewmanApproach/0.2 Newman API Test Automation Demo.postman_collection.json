{
	"info": {
		"_postman_id": "22dbb167-7c4c-464b-a1ed-b1e6c47424e4",
		"name": "0.2 Newman API Test Automation Demo",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "37199984",
		"_collection_link": "https://speeding-water-312554.postman.co/workspace/pw_accounting_team~c8e800ba-75b9-4e69-873b-ea032c9b8d10/collection/37199984-22dbb167-7c4c-464b-a1ed-b1e6c47424e4?action=share&source=collection_link&creator=37199984"
	},
	"item": [
		{
			"name": "Tax-Service",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "taxes",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Fetches a tax by ID - Successful response",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Response status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"\r",
															"pm.test(\"Response Content-Type is application/json\", function () {\r",
															"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
															"});\r",
															"\r",
															"\r",
															"pm.test(\"Validate the required fields\", function () {\r",
															"    const responseData = pm.response.json();\r",
															"    \r",
															"    pm.expect(responseData).to.be.an('object');\r",
															"    pm.expect(responseData).to.have.property('id');\r",
															"    pm.expect(responseData).to.have.property('code');\r",
															"    pm.expect(responseData).to.have.property('name');\r",
															"    pm.expect(responseData).to.have.property('rate');\r",
															"    pm.expect(responseData).to.have.property('assess_premium');\r",
															"    pm.expect(responseData).to.have.property('assess_commission');\r",
															"    pm.expect(responseData).to.have.property('state_id');\r",
															"    pm.expect(responseData).to.have.property('zipcode');\r",
															"    pm.expect(responseData).to.have.property('expire_date');\r",
															"});\r",
															"\r",
															"\r",
															"pm.test(\"Assess_premium and assess_commission are boolean values\", function () {\r",
															"    const responseData = pm.response.json();\r",
															"    \r",
															"    pm.expect(responseData.assess_premium).to.be.a('boolean');\r",
															"    pm.expect(responseData.assess_commission).to.be.a('boolean');\r",
															"});\r",
															"\r",
															"\r",
															"pm.test(\"Expire_date is in a valid ISO 8601 date format\", function () {\r",
															"    const responseData = pm.response.json();\r",
															"    \r",
															"    pm.expect(responseData).to.be.an('object');\r",
															"    pm.expect(responseData.expire_date).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.000Z$/);\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": "{{baseUrl}}/v1/taxes/2",
												"description": "Fetches a tax by ID"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "access-token",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/taxes/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"taxes",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"assess_commission\": \"<boolean>\",\n  \"assess_premium\": \"<boolean>\",\n  \"code\": \"<string>\",\n  \"expire_date\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"override\": \"<integer>\",\n  \"rate\": \"<number>\",\n  \"state_id\": \"<integer>\",\n  \"zipcode\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "access-token",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/taxes/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"taxes",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\"\n}"
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "access-token",
																"value": "<API Key>",
																"description": "Added as a part of security scheme: apikey"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/taxes/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"taxes",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"status\": \"<string>\",\n  \"code\": \"<integer>\"\n}"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"// ______________________________________________________________________________________________________________________________\r",
					"// NOTE: These tokens will automatically apply to all endpoints within this collection, provided they are configured to inherit authorization from the parent.\r",
					"// If you encounter an error, please verify that the request’s Authorization setting is set to \"Inherit auth from parent\".\r",
					"// -------------------------------------------------------------------------------------------------------------------------------\r",
					"\r",
					"\r",
					"\r",
					"let customToken = pm.collectionVariables.get(\"ACCESS-TOKEN\"); // NOTE: This token vraible should be same as Variable in the Header or Environment\r",
					"\r",
					"if (customToken) {\r",
					"    pm.request.headers.add({\r",
					"        key: \"Access-Token\",\r",
					"        value: `${customToken}`\r",
					"    });\r",
					"    console.log(\"Custom Token Set in Headers:\", customToken);\r",
					"} else {\r",
					"    console.log(\"Error: ACCESS-TOKEN not found in collection variables.\");\r",
					"}\r",
					"\r",
					"\r",
					"\r",
					"// ---------------------------------------------------------------------------------------------------------------------------------\r",
					"// PERMISSION FOR CLIENT & EMPLOYEE | Accounting Team@Purplewave\r",
					"// ---------------------------------------------------------------------------------------------------------------------------------\r",
					"\r",
					"\r",
					"\r",
					"//[SET EMPLOYEE TOKEN]\r",
					"// const employeeToken = pm.variables.get(\"employee_bearer_token\"); // NOTE: The employee token vraible should be same as Variable in the Header or Environment\r",
					"\r",
					"// if (employeeToken) {\r",
					"//     pm.collectionVariables.set(\"Authorization\", `Bearer ${employeeToken}`);\r",
					"//     console.log(\"Employee Bearer Token set in Collection Variables.\");\r",
					"// } else {\r",
					"//     console.warn(\"Missing 'employee_bearer_token'. Set it in Collection/Environment variables.\");\r",
					"// }\r",
					"\r",
					"//[SET CLIENT TOKEN]\r",
					"// const clientToken = pm.variables.get(\"client_bearer_token\"); //NOTE: The cleint or customer token vraible should be same as Variable in the Header or Environment\r",
					"\r",
					"// if (clientToken) {\r",
					"//     pm.collectionVariables.set(\"ClientAuthorization\", `Bearer ${clientToken}`);\r",
					"//     console.log(\"Client Bearer Token set in Collection Variables.\");\r",
					"// } else {\r",
					"//     console.warn(\"Missing 'client_bearer_token'. Set it in Collection/Environment variables.\");\r",
					"// }\r",
					"\r",
					"//[Token Refresh Logic]\r",
					"// if (!pm.environment.get(\"accessToken\")) {\r",
					"//     console.log(\" No access token found. Attempting token refresh...\");\r",
					"\r",
					"//     pm.sendRequest({ //Try to do it for all test envirnments \r",
					"//         url: \"https://example.com/oauth/token\", // Replace with actual refresh token Endpoint for Authentication-Service @Purplewave\r",
					"//         method: \"POST\",\r",
					"//         header: {\r",
					"//             \"Content-Type\": \"application/json\"\r",
					"//         },\r",
					"//         body: {\r",
					"//             mode: \"raw\",\r",
					"//             raw: JSON.stringify({\r",
					"//                 client_id: \"your-client-id\",\r",
					"//                 client_secret: \"your-client-secret\",\r",
					"//                 grant_type: \"refresh_token\",\r",
					"//                 refresh_token: pm.environment.get(\"refreshToken\")\r",
					"//             })\r",
					"//         }\r",
					"//     }, function (err, res) {\r",
					"//         if (!err && res.code === 200) {\r",
					"//             const json = res.json();\r",
					"//             pm.environment.set(\"accessToken\", json.access_token);\r",
					"//             pm.environment.set(\"refreshToken\", json.refresh_token);\r",
					"//             console.log(\"Access token refreshed successfully.\");\r",
					"//         } else {\r",
					"//             console.error(\"❌ Failed to refresh token.\", err || res);\r",
					"//         }\r",
					"//     });\r",
					"// }\r",
					"\r",
					"//[Set Permissions]\r",
					"const employeePermissions = decodeURIComponent(\"employee_permissions=%5B%22admin%22%2C%22company_import_read%22%2C%22company_import_write%22%5D\");\r",
					"pm.collectionVariables.set(\"employee_permissions\", employeePermissions);\r",
					"console.log(\"Employee permissions set.\");\r",
					"\r",
					"\r",
					"\r",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "ACCESS-TOKEN",
			"value": "Xp2s5v8y/B?E(G+KbPeShVmYq3t6w9z$C&F)J@McQfTjWnZr4u7x!A%D*G-KaPdS",
			"type": "string"
		},
		{
			"key": "employee_bearer_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "client_bearer_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "employee_permissions",
			"value": ""
		},
		{
			"key": "Expired-Token",
			"value": "bearer 00da0120-14d7-4ce4-a21b-f2e46cb911c0",
			"type": "string"
		}
	]
}